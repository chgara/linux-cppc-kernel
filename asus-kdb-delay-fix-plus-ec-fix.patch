diff --git a/drivers/acpi/ec.c b/drivers/acpi/ec.c
index e7793ee9e649..337615852688 100644
--- a/drivers/acpi/ec.c
+++ b/drivers/acpi/ec.c
@@ -1482,7 +1482,19 @@ static bool install_gpio_irq_event_handler(struct acpi_ec *ec)
 static int ec_install_handlers(struct acpi_ec *ec, struct acpi_device *device,
 			       bool call_reg)
 {
-	acpi_handle scope_handle = ec == first_ec ? ACPI_ROOT_OBJECT : ec->handle;
+	/**
+	 * This seems odd here... ACPI_ROOT_OBJECT - is it handle? Or object?
+	 * So the problem is that on acpi_ec_setup(), ec assigned to first_ec.
+	 * so handlers will be installed on something but not ec->handle
+	 * Also the question if first_ec must be reinitialized here to something else?
+	 *
+	 * Old version used to use separate handle for address space handle in acpi_ec...
+	 * Anyways, existing version breakes battery and AC readings on Asus gu605.
+	 *
+	 * Have no idea what is right fix, but using ec->handle seems resolve the problem
+	 * and it is close as much as possible to "old" variant.
+	 */
+	acpi_handle scope_handle = ec->handle; // == first_ec ? ACPI_ROOT_OBJECT : ec->handle;
 	acpi_status status;
 
 	acpi_ec_start(ec, false);
diff --git a/drivers/hid/hid-asus.c b/drivers/hid/hid-asus.c
index a5d47d997fa8..a50fb02575cb 100644
--- a/drivers/hid/hid-asus.c
+++ b/drivers/hid/hid-asus.c
@@ -577,8 +577,8 @@ static int asus_kbd_register_leds(struct hid_device *hdev)
 		return -ENOMEM;
 
 	drvdata->kbd_backlight->report_id = FEATURE_KBD_REPORT_ID;
-	if (drvdata->quirks & QUIRK_ROG_NKEY_KEYBOARD && asus_kbd_is_input_led())
-		drvdata->kbd_backlight->report_id = FEATURE_KBD_LED_REPORT_ID1;
 
 	drvdata->kbd_backlight->removed = false;
 	drvdata->kbd_backlight->brightness = 0;
